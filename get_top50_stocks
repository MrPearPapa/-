import time
import pandas as pd
import akshare as ak
import warnings
import datetime
from openpyxl import load_workbook
from pandas.tseries.offsets import Day
from chinese_calendar import is_holiday, is_workday
warnings.filterwarnings('ignore')#关闭运行时警告

pd.set_option('max_rows',None)#显示所有行
pd.set_option('max_columns',None)#显示所有列

#输入参数
now_time = pd.datetime.now() #获取当前日期
end_date = now_time.strftime('%Y%m%d') #以年月日形式生成日期
if is_workday(now_time + datetime.timedelta(days=-1)):
    start_date = (now_time + datetime.timedelta(days=-1)).strftime('%Y%m%d') #前一天是工作日 20220601
    start_date_with_minus = (now_time + datetime.timedelta(days=-1)).strftime('%Y-%m-%d')  # 2022-06-01
else:
    start_date = (now_time + datetime.timedelta(days=-3)).strftime('%Y%m%d') #前一天不是工作日，再往前推两天 20220601
    start_date_with_minus = (now_time + datetime.timedelta(days=-3)).strftime('%Y-%m-%d') #2022-06-01
adj = 'qfq' #复权类型 None：未复权 qfq：前复权 hfq：后复权
period = 'daily' #周期可选：daily,weekly,monthly

#利用东财实时行情数据接口获取所有股票代码接口
df = ak.stock_zh_a_spot_em()
df.sort_values(by=['成交额'],axis=0,ascending=False,inplace=True)#按成交额降序排列
sort_30stocks = df.iloc[:30,:]#获取当日成交额前30代码

code_list = sort_30stocks[['序号','代码','名称']].values #股票代码信息列表

df_history_total = pd.DataFrame()
#获取所有历史上股票的历史数据
for i,ak_code,ak_name in code_list:
    print(i,ak_code,ak_name)
    try:
        # 利用东财历史行情数据接口获取股票数据
        df_history = ak.stock_zh_a_hist(symbol=ak_code,period=period,
                                        start_date=start_date,end_date=end_date,
                                        adjust=adj)
    except Exception as e:
        print(e)
        continue

    if ak_code.startswith('6')==True:
        df_history['股票代码'] = ak_code + '.SH'
    elif ak_code.startswith('8')==True:
        df_history['股票代码'] = ak_code + '.BJ'
    else:
        df_history['股票代码'] = ak_code + '.SZ'

    df_history['股票名称'] = ak_name

    df_history_total = pd.concat([df_history_total,df_history],axis=0)

df_history_total.reset_index(drop=True,inplace=True) #删除原索引，生成新索引

df_yesterday = df_history_total.loc[df_history_total['日期']==start_date_with_minus] #提取前一天信息列表
df_history_total.drop(index=df_history_total.loc[df_history_total['日期']==start_date_with_minus].index.tolist(),axis=0,inplace=True)
df_history_total.reset_index(drop=True,inplace=True)
df_yesterday.reset_index(drop=True,inplace=True)

df_yesterday.columns = 'y' + df_history_total.columns #前一天列名前加y
df_history_total = pd.merge(df_history_total,df_yesterday,left_on='股票代码',right_on='y股票代码',how='outer') #将前一天列表根据股票代码合并至当日列表右侧

df_history_total.drop(columns=['y日期','y股票代码','y股票名称'],inplace=True) #删除多余列

df_history_total['AP0'] = df_history_total['成交额'] / (df_history_total['成交量'] * 100)
df_history_total['AP1'] = df_history_total['y成交额'] / (df_history_total['y成交量'] * 100)
df_history_total['PNL0'] = (df_history_total['收盘'] * df_history_total['成交量'] * 100 - df_history_total['成交额']) / 10000
df_history_total['PNL1'] = (df_history_total['AP0'] - df_history_total['AP1']) * df_history_total['y成交量'] *100 / 10000
df_history_total['PNL'] = df_history_total['PNL0'] + df_history_total['PNL1']
SPNL = df_history_total['PNL'].sum()

path = 'D:\Python工程文件\stock\data/' + end_date + '.xlsx'
df_history_total.to_excel(path) #保存至excel，文件名为当前日期

#统计SPNL
filename = "D:\Python工程文件\stock\data/SPNL.xlsx"
wb = load_workbook(filename)
sheet = wb.active
data = (end_date,SPNL)
sheet.append(data)
wb.save(filename)

